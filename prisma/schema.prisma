generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model drivers {
  id                  Int      @id @default(autoincrement())
  fullname            String   @db.VarChar
  lat                 Float
  lng                 Float
  registration_number String   @db.VarChar
  is_active           Boolean
  created_at          DateTime @default(now()) @db.Timestamp(6)
  modified_at         DateTime @default(now()) @db.Timestamp(6)

  travels travels[]
}

model invoice {
  id           Int     @id @default(autoincrement())
  travel_id    Int
  travel_price Decimal @db.Decimal
  taxes        Decimal @db.Decimal
  total        Decimal @db.Decimal
  is_active    Boolean

  travels travels @relation(fields: [travel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model passengers {
  id          Int      @id @default(autoincrement())
  fullname    String   @db.VarChar
  lat         Float
  lng         Float
  is_active   Boolean
  created_at  DateTime @default(now()) @db.Timestamp(6)
  modified_at DateTime @default(now()) @db.Timestamp(6)

  travels travels[]
}

model travels {
  id             Int      @id @default(autoincrement())
  passenger_id   Int
  driver_id      Int
  from           String   @db.VarChar
  to             String   @db.VarChar
  is_active      Boolean
  travel_status  travel_status
  created_at     DateTime @default(now()) @db.Timestamp(6)

  invoice    invoice[]
  drivers    drivers    @relation(fields: [driver_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  passengers passengers @relation(fields: [passenger_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum travel_status {
  inprocess
  cancelled
  completed
}
